

def kurulum::
	android ios için kurulum yapion sistemde adım adım anlatio ztn



def db_olusturma:
	koleksiyon oluşturacağız: koleksiyon klasördür, bu klasörün içine belgeler yollayacaz

	koleksiyon ekledim mesela blog daki yazılar için
	birde belge var
		belge ekleyem
			yazi1 belge ismi 
				1nci alan baslik ve değer Yazı Başlığı
				2nci alan icerik ve deger Yazı İçeriği

						olsun

		bunu kaydedince yazi1 die belge eklenior, 
		bu kısmı db üzerinde  yapiozda app içinde yapalım pub dev den 


		gidlim ve basit bir ui tasarlayalım

	
		ui tasarımından sonra FirebaseFirestore.instance.collection("yazilar").doc() kod bloğu ile
		 firestore üzerindeki koleksiyonuma erişip crud vs yapabiliom  


		 eklemeyle güncelelleme db üzerinde benzer çalışıyor, aynı şeyi eklersen düzenleme yapıyor 
		 büyük ihtimalle güncelleme daha az maliyetlidir





		map yapısı: anahtar var değer var muhabbeti		



def basit_duzeyde:

	2 input alanı ve crud butonlarının olduğu, crud gerçekleştirilen ui:

import 'package:cloud_firestore/cloud_firestore.dart';
import 'package:firebase_core/firebase_core.dart';
import 'package:flutter/material.dart';

Future<void> main() async {
  WidgetsFlutterBinding.ensureInitialized();
  await Firebase.initializeApp();
  runApp(MyApp());
}

class MyApp extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      home: Iskele(),
    );
  }
}

class Iskele extends StatefulWidget {
  @override
  _IskeleState createState() => _IskeleState();
}

class _IskeleState extends State<Iskele> {
  TextEditingController t1 = TextEditingController();
  TextEditingController t2 = TextEditingController();

  var gelenYaziBasligi = "";
  var gelenYaziIcerigi = "";

  yaziEkle() {
    FirebaseFirestore.instance
        .collection("Yazilar")
        .doc(t1.text)
        .set({'baslik': t1.text, 'icerik': t2.text}).whenComplete(
            () => print("ekleme basarılı"));
  }

  yaziGuncelle() {
    FirebaseFirestore.instance
        .collection("Yazilar")
        .doc(t1.text)
        .update({'baslik': t1.text, 'icerik': t2.text}).whenComplete(
            () => print("guncellem basarılı"));
  }

  yaziSil() {
    FirebaseFirestore.instance.collection("Yazilar").doc(t1.text).delete();
  }

  yaziGetir() {
    FirebaseFirestore.instance
        .collection("Yazilar")
        .doc(t1.text)
        .get()
        .then((gelenVeri) {
      setState(() {
        gelenYaziBasligi = gelenVeri.data()['baslik'];
        gelenYaziIcerigi = gelenVeri.data()['icerik'];
      });
    });
  }



  @override
  Widget build(BuildContext context) {
    return Scaffold(
      body: Container(
        margin: EdgeInsets.all(40),
        child: Center(
          child: Column(
            children: [
              TextField(
                controller: t1,
              ),
              TextField(
                controller: t2,
              ),
              SingleChildScrollView(child: Column(
                children: [
                  ElevatedButton(child: Text("Ekle"), onPressed: yaziEkle),
                  ElevatedButton(child: Text("Günclle"), onPressed: yaziGuncelle),
                  ElevatedButton(child: Text("Sil"), onPressed: yaziSil),
                  ElevatedButton(child: Text("Getir"), onPressed: yaziGetir),
                ],
              ),),
              ListTile(
                title: Text(gelenYaziBasligi),
                subtitle: Text(gelenYaziIcerigi),
              ),
            ],
          ),
        ),
      ),
    );
  }
}	






def kullanici_girisli_blog():
		